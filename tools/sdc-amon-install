#!/usr/bin/bash
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
# Copyright (c) 2014, Joyent, Inc.
#

# vi: expandtab sw=4 ts=4
#
# Install Amon probes for the 'sdc' zone.
#

if [[ -n "$TRACE" ]]; then
    export PS4='${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
    set -o xtrace
fi
set -o errexit


#---- globals, config

PATH=/opt/smartdc/sdc/bin:/opt/smartdc/sdc/build/node/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin

TOP=$(cd $(dirname $0)/../; pwd)
CONFIG=$TOP/etc/config.json

res_status=
res_body=



#---- functions

function fatal {
    echo "$(basename $0): error: $1"
    exit 1
}

# Call the amon master.
function amon() {
    local res=$(sdc-amon "$@")
    res_status=$(echo "$res" | head -1 | awk '{print $2}')
    res_body=$(echo "$res" | json -Hq)
}

function putprobe() {
    local account=$1
    local payload=$2
    local pname=$(echo "$payload" | json name)
    if [[ -z "$pname" ]]; then
        fatal "No 'name' for probe: $payload"
    fi
    amon /pub/$account/probes
    local probe_uuid=$(echo "$res_body" | json -H -c "this.name == '$pname'" -a uuid)
    if [[ "$res_status" != "200" ]]; then
        fatal "Error looking for probe '$pname': $res_status $res_body"
    elif [[ -n "$probe_uuid" ]]; then
        echo "Probe '$pname' already exists: $probe_uuid"
    else
        echo "Create probe '$pname'."
        amon /pub/$account/probes -X POST -f --data "$payload"
    fi
}



#---- mainline

zonename=$(zonename)
zonealias=$(mdata-get sdc:alias)
account=$(json -f $CONFIG ufds_admin_uuid)

# Sanity check that amon-master is up.
amon /ping -f || fatal "amon-master ping failed: $res_status $res_body"

putprobe $account "{
    \"skipauthz\": true,
    \"name\": \"dump-minutely-sdc-data error\",
    \"type\": \"log-scan\",
    \"agent\": \"$zonename\",
    \"contacts\": [\"email\"],
    \"config\": {
        \"path\": \"/var/log/dump-minutely-sdc-data.log\",
        \"match\": {
            \"pattern\": \"error\",
            \"matchWord\": true,
            \"type\": \"substring\"
        }
    }
}"

putprobe $account "{
    \"skipauthz\": true,
    \"name\": \"dump-hourly-sdc-data error\",
    \"type\": \"log-scan\",
    \"agent\": \"$zonename\",
    \"contacts\": [\"email\"],
    \"config\": {
        \"path\": \"/var/log/dump-hourly-sdc-data.log\",
        \"match\": {
            \"pattern\": \"error\",
            \"matchWord\": true,
            \"type\": \"substring\"
        }
    }
}"

putprobe $account "{
    \"skipauthz\": true,
    \"name\": \"upload-sdc-data error\",
    \"type\": \"log-scan\",
    \"agent\": \"$zonename\",
    \"contacts\": [\"email\"],
    \"config\": {
        \"path\": \"/var/log/upload-sdc-data.log\",
        \"match\": {
            \"pattern\": \"error\",
            \"matchWord\": true,
            \"type\": \"substring\"
        }
    }
}"

